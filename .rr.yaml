# RR configuration version
version: '3'

# Remote Procedures Calling (docs: https://roadrunner.dev/docs/plugins-rpc/2.x/en)
# Is used for connecting to RoadRunner server from your PHP workers.
rpc:
  # TCP address:port for listening.
  #
  # Default: "tcp://127.0.0.1:6001"
  listen: tcp://0.0.0.0:${RPC_PORT:-6001}

# Application server settings (docs: https://roadrunner.dev/docs/php-worker)
server:
  # Worker starting command, with any required arguments.
  #
  # This option is required.
  command: "php ./tests/GrpcApp.php"

  # Worker relay can be: "pipes", TCP (eg.: tcp://127.0.0.1:6002), or socket (eg.: unix:///var/run/rr.sock).
  #
  # Default: "pipes"
  relay: pipes

  # Timeout for relay connection establishing (only for socket and TCP port relay).
  #
  # Default: 60s
  relay_timeout: 60s

# Logging settings (docs: https://roadrunner.dev/docs/plugins-logger/2.x/en)
logs:
  # Logging mode can be "development", "production" or "raw". Do not forget to change this value for production environment.
  #
  # Development mode (which makes DPanicLevel logs panic), uses a console encoder, writes to standard error, and
  # disables sampling. Stacktraces are automatically included on logs of WarnLevel and above.
  #
  # Default: "development"
  mode: development

  # Logging level can be "panic", "error", "warn", "info", "debug".
  #
  # Default: "debug"
  level: debug

  # Encoding format can be "console" or "json" (last is preferred for production usage).
  #
  # Default: "console"
  encoding: console

  # Log line ending
  #
  # Default: "\n"
  line_ending: "\n"

  # Output can be file (eg.: "/var/log/rr_errors.log"), "stderr" or "stdout".
  #
  # Default: "stderr"
  output: stderr

  # Errors only output can be file (eg.: "/var/log/rr_errors.log"), "stderr" or "stdout".
  #
  # Default: "stderr"
  err_output: stderr

  # File logger options
  #
  # Default: null
  file_logger_options:

    # Path to the file
    #
    # Default: It uses <processname>-lumberjack.log name in the os tempdir if empty.
    log_output: "./tests/Support/runtime/logs/rr.log"

    # Max file size in MB
    #
    # Default: 100
    max_size: 100

    # max_age is the maximum number of days to retain old log files based on the timestamp encoded in their filename.
    #
    # Default: 1 (day)
    max_age: 1

    # max_backups is the maximum number of old log files to retain.
    #
    # Default: retain all (if set to 0)
    max_backups: 5

    # Compress determines if the rotated log files should be compressed using gzip.
    #
    # Default: false
    compress: false

grpc:
    # GRPC address to listen
    #
    # This option is required
    listen: "tcp://0.0.0.0:9001"

    # Proto file to use, multiply files supported [SINCE 2.6]. As of v2023.1.4, wilcards are allowed in the proto field.
    #
    # This option is required
    proto:
        - "./tests/Support/Grpc/Proto/Service.proto"

    # Maximum send message size
    #
    # This option is optional. Default value: 50 (MB)
    max_send_msg_size: 50

    # Maximum receive message size
    #
    # This option is optional. Default value: 50 (MB)
    max_recv_msg_size: 50

    # MaxConnectionIdle is a duration for the amount of time after which an
    #	idle connection would be closed by sending a GoAway. Idleness duration is
    #	defined since the most recent time the number of outstanding RPCs became
    #	zero or the connection establishment.
    #
    # This option is optional. Default value: infinity.
    max_connection_idle: 0s

    # MaxConnectionAge is a duration for the maximum amount of time a
    #	connection may exist before it will be closed by sending a GoAway. A
    #	random jitter of +/-10% will be added to MaxConnectionAge to spread out
    #	connection storms.
    #
    # This option is optional. Default value: infinity.
    max_connection_age: 0s

    # MaxConnectionAgeGrace is an additive period after MaxConnectionAge after
    #	which the connection will be forcibly closed.
    max_connection_age_grace: 0s8h

    # MaxConnectionAgeGrace is an additive period after MaxConnectionAge after
    #	which the connection will be forcibly closed.
    #
    # This option is optional: Default value: 10
    max_concurrent_streams: 10

    # After a duration of this time if the server doesn't see any activity it
    #	pings the client to see if the transport is still alive.
    #	If set below 1s, a minimum value of 1s will be used instead.
    #
    # This option is optional. Default value: 2h
    ping_time: 1s

    # After having pinged for keepalive check, the server waits for a duration
    #	of Timeout and if no activity is seen even after that the connection is
    #	closed.
    #
    # This option is optional. Default value: 20s
    timeout: 200s

    # Usual workers pool configuration
    pool:
        # Debug mode for the pool. In this mode, pool will not pre-allocate the worker. Worker (only 1, num_workers ignored) will be allocated right after the request arrived.
        #
        # Default: false
        debug: false

        # How many worker processes will be started. Zero (or nothing) means the number of logical CPUs.
        #
        # Default: 0
        num_workers: 0

        # Maximal count of worker executions. Zero (or nothing) means no limit.
        #
        # Default: 0
        max_jobs: 0

        # Timeout for worker allocation. Zero means 60s.
        #
        # Default: 60s
        allocate_timeout: 60s

        # Timeout for the reset timeout. Zero means 60s.
        #
        # Default: 60s
        reset_timeout: 60s

        # Timeout for worker destroying before process killing. Zero means 60s.
        #
        # Default: 60s
        destroy_timeout: 60s
